from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ConversationHandler, ContextTypes

TOKEN = '8166412144:AAH6gFmQPOjGn3CSoDmwJuSBzSxEfBq8x8M'

# –®–∞–≥–∏
PRICE, WEIGHT, FREIGHT, DUTY, VAT = range(5)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    reply_keyboard = [['–ù–∞—á–∞—Ç—å —Ä–∞—Å—á—ë—Ç']]
    markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏.\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
        reply_markup=markup
    )
    return PRICE

async def price(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['price'] = float(update.message.text)
    await update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –æ–±—â–∏–π –≤–µ—Å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ (–∫–≥):')
    return WEIGHT

async def weight(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['weight'] = float(update.message.text)
    await update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ñ—Ä–∞—Ö—Ç–∞ (USD):')
    return FREIGHT

async def freight(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['freight'] = float(update.message.text)
    await update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ—à–ª–∏–Ω—ã (%):')
    return DUTY

async def duty(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['duty'] = float(update.message.text)
    await update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –ù–î–° (%):')
    return VAT

async def vat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['vat'] = float(update.message.text)

    price = context.user_data['price']
    weight = context.user_data['weight']
    freight = context.user_data['freight']
    duty = context.user_data['duty']
    vat = context.user_data['vat']
    extra_cost = 90  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ —Ç–æ–Ω–Ω—É

    price_per_kg = price
    freight_per_kg = freight / weight
    duty_per_kg = price_per_kg * duty / 100
    vat_per_kg = price_per_kg * vat / 100
    total_per_kg = price_per_kg + freight_per_kg + duty_per_kg + vat_per_kg
    total_per_ton = total_per_kg * 1000 + extra_cost

    reply_text = (
        "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á—ë—Ç–∞:\n"
        f"üí≤ –¶–µ–Ω–∞ –∑–∞ –∫–≥: {price_per_kg:.2f} USD\n"
        f"üì¶ –í–µ—Å: {weight:.2f} –∫–≥\n"
        f"üö¢ –§—Ä–∞—Ö—Ç: {freight:.2f} USD\n"
        f"üìà –ü–æ—à–ª–∏–Ω–∞: {duty:.1f}%\n"
        f"üí∞ –ù–î–°: {vat:.1f}%\n"
        f"üìâ –§—Ä–∞—Ö—Ç –∑–∞ –∫–≥: {freight_per_kg:.4f} USD\n"
        f"üìâ –ü–æ—à–ª–∏–Ω–∞ –∑–∞ –∫–≥: {duty_per_kg:.4f} USD\n"
        f"üìâ –ù–î–° –∑–∞ –∫–≥: {vat_per_kg:.4f} USD\n"
        f"‚úÖ –ò—Ç–æ–≥–æ –∑–∞ –∫–≥: {total_per_kg:.4f} USD\n"
        f"‚úÖ –ò—Ç–æ–≥–æ –∑–∞ —Ç–æ–Ω–Ω—É (—Å –¥–æ–ø. —Ä–∞—Å—Ö–æ–¥–∞–º–∏): {total_per_ton:.2f} USD\n\n"
        "–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞."
    )
    await update.message.reply_text(reply_text)
    return ConversationHandler.END

def main():
    app = ApplicationBuilder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            PRICE: [MessageHandler(filters.TEXT & ~filters.COMMAND, price)],
            WEIGHT: [MessageHandler(filters.TEXT & ~filters.COMMAND, weight)],
            FREIGHT: [MessageHandler(filters.TEXT & ~filters.COMMAND, freight)],
            DUTY: [MessageHandler(filters.TEXT & ~filters.COMMAND, duty)],
            VAT: [MessageHandler(filters.TEXT & ~filters.COMMAND, vat)],
        },
        fallbacks=[CommandHandler('start', start)],
    )

    app.add_handler(conv_handler)
    app.run_polling()

if __name__ == '__main__':
    main()
